package com.example.edrsystem;

import com.google.common.util.concurrent.RateLimiter;
import java.nio.file.Path;
import java.util.logging.Logger;

public class MalwareChecker {
    private static final Logger logger = Logger.getLogger(MalwareChecker.class.getName());
    private final VirusTotalClient virusTotalClient;
    private final RateLimiter rateLimiter;
    private final ExpiringCache<String, Boolean> hashCache;

    public MalwareChecker() {
        this.virusTotalClient = new VirusTotalClient();
        this.rateLimiter = RateLimiter.create(4.0 / 60.0); // 4 requests per minute
        this.hashCache = new ExpiringCache<>(3600000); // 1 hour expiration
    }

    public void checkFileForMalware(Path file, String fileHash, String context) {
        rateLimiter.acquire();

        Boolean cachedResult = hashCache.get(fileHash);

        if (cachedResult != null) {
            if (cachedResult) {
                logger.severe(String.format("Cached result: Malware detected in file: %s", file));
                alertSecurityTeam(file, fileHash, context);
            } else {
                logger.info(String.format("Cached result: File hash check passed for %s", file));
            }
            return;
        }

        boolean isMalicious = virusTotalClient.checkFileHash(fileHash);

        if (isMalicious) {
            logger.severe(String.format("WARNING: Potential malware detected: %s", file));
            alertSecurityTeam(file, fileHash, context);
        } else {
            logger.info(String.format("File hash check passed: %s", file));
        }

        hashCache.put(fileHash, isMalicious);
    }

    private void alertSecurityTeam(Path file, String fileHash, String context) {
        // TODO: Implement a real-time alerting system (e.g., email, SMS, or integration with a SIEM system)
        logger.severe(String.format("ALERT: Potential malware detected. File: %s, Hash: %s, Context: %s", file, fileHash, context));
    }
}